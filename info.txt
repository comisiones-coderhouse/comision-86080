Manuales de React (desde el mas tecnico al mas amigable)

https://react.dev/
https://www.reactjs.wiki/
https://react.gg/visualized#the-react-way
https://drive.google.com/file/d/1fnPPtxSHewaYpRmlaa49cAtG2B13lZu8/view
https://github.com/r5n-labs/vscode-react-javascript-snippets/blob/HEAD/docs/Snippets.md
https://chromewebstore.google.com/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi
https://svgl.app/
https://react-bootstrap.netlify.app/docs/getting-started/introduction
https://ant.design/docs/react/use-with-vite
https://tailwindcss.com/docs/display
https://cssinjs.org/?v=v10.10.1
https://danielkummer.github.io/git-flow-cheatsheet/
https://lucide.dev/guide/installation


rfc

export default function Footer() {
  return (
    <div>Footer</div>
  )
}


rfce

function Footer() {
  return (
    <div>Footer</div>
  )
}

export default Footer


- props



//Declaracion
function Foo(saludo){}

//Ejecucion
Foo("Hola")

<Foo unProp="unvalor" />



Hooks y estados

Todos los hooks son funciones que comienzan con la palabra "use" (useState,useEffect,useContext,useLoQueSea)



1ra preentrega : 

- App 
- NavBar : Aca va el brand y los links de navegacion (categorias de productos) - Va dentro de App
- CartWidget : Aca va el icono del carrito de compras con un numero - Va dentro de Navbar
- ItemListContainer : Aca se recibe un prop llamado "greeting" y se muestra en el container - Va dentro de App




Syntaxis de estados : 

const [miEstado,setMiEstado] = useState(<valorInicial>);



Destructuring :


const nombres = [ "horacio" , "marta" , "nico" , "fer" ]

const primero = nombres[0]; //"horacio"
const segundo = nombres[1]; //"marta"
const tercero = nombres[2]; //"nico"
const cuarto = nombres[3]; //"fer"


const [const1,const2,...constN] = unArray

const [primero,segundo,tercero,cuarto] = nombres


console.log(segundo) //"marta"
console.log(primero) //"horacio"
console.log(cuarto) //"fer"
console.log(tercero) //"nico"
console.log(cuarto) //"fer"
console.log(segundo) //"marta"






const persona = {
  nombre : "Horacio",
  edad : 35, 
  isDev : true
}

const nombre = persona.nombre;
const edad = persona.edad;
const isDev = persona.isDev;


const {prop1:var1,prop2:var2,...propN:varN} = unObj
const {nombre:nombre,edad:edad,isDev:isDev} = persona
const {edad,isDev,nombre} = persona

console.log(nombre)
console.log(nombre)
console.log(edad)
console.log(isDev)




Object Property Shorthand

const nombre = "Horacio";
const edad = 35;

const persona = {
  nombre, //nombre : nombre,
  edad : edad
};


